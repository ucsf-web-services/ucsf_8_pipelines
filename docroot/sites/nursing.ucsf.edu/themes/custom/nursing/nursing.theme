<?php

/**
 * @file
 * Functions to support theming in the nursing theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function nursing_preprocess_html(array &$variables) {

  $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
  $menu_tree = Drupal::menuTree();
  $parameters = \Drupal::menuTree()->getCurrentRouteMenuTreeParameters('main');
  $parameters->setTopLevelOnly();
  $main_menu_top_level = $menu_tree->load('main', $parameters);

  foreach ($main_menu_top_level as $key => $menu) {
    if ($menu->inActiveTrail){
      $menu_instance = $menu_link_manager->createInstance($menu->link->getPluginId());
      $menu_item = $menu_instance->getPluginDefinition();
      $title = $menu_instance->getTitle();
      $menu_storage = \Drupal::entityManager()->getStorage('menu_link_content')->load($menu_item['metadata']['entity_id']);
    }
  }

  if ($menu_storage) {
    foreach ($menu_storage->get('hero_images')->getValue() as $key => $file) {
      $image = file_load($file['target_id'])->get('uri')->getValue();
      $heroImages[] = file_create_url($image[0]['value']);
    }
    $news_pattern = explode('/',\Drupal\Core\Url::fromRoute('<current>')->toString());
    $level = substr_count(\Drupal\Core\Url::fromRoute('<current>')->toString(), '/');
    if($level <= 2 && $news_pattern[1] != 'news') {
      $variables['hero_image'] = $heroImages;
      $variables['attributes']['class'][] = 'hero';
      $variables['#attached']['drupalSettings']['heroImages'] = $heroImages;
    }
    else {
      $variables['attributes']['class'][] = 'no-hero';
    }
    $variables['color_class'] = 'section-'.strtolower(str_replace(" ", "-", $title));
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function nursing_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function nursing_preprocess_page(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function nursing_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function nursing_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function nursing_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function nursing_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function nursing_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function nursing_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function nursing_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function nursing_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function nursing_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function nursing_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function nursing_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function nursing_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function nursing_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}
